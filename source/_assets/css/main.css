@import 'tailwindcss/base';
@import 'tailwindcss/components';
@import 'highlight.js/styles/default.css';
@import 'tailwindcss/utilities';

html,body {
    scroll-behavior: smooth
}

#post h1 {
    @apply font-bold text-5xl mb-4;
}

#post h2 {
    @apply font-bold text-3xl mb-4;
}

#post h3 {
    @apply font-bold text-2xl mb-4;
}

#post p {
    @apply leading-relaxed text-lg;
}

#post ul, ol {
    @apply my-2;
}

#post ol {
    @apply list-decimal list-inside text-lg;
}

/*
 Margin and rounding are personal preferences,
 overflow-x-auto is recommended.
*/

pre {
    @apply my-4 rounded overflow-x-auto;
}

/*
 Add some vertical padding and expand the width
 to fill its container. The horizontal padding
 comes at the line level so that background
 colors extend edge to edge.
*/

pre code.torchlight {
    @apply block py-4 min-w-max;
}

/*
 Horizontal line padding.
*/

pre code.torchlight .line {
    @apply px-4;
}

/*

 Push the code away from the line numbers and
 summary caret indicators.
*/

pre code.torchlight .line-number,
pre code.torchlight .summary-caret {
    @apply mr-4;
}

iframe {
    @apply mt-4;
}

#post pre + h1, h2, h3, p {
    @apply mt-4;
}

#post pre, p > img {
    border-radius: .25rem;
}

#post pre:not + blockquote {
    @apply leading-normal pb-6 pt-3;
}

#post blockquote {
    @apply border-l-4 border-niagara;
}

#post blockquote, .highlight {
    @apply bg-gray-200 p-6 my-6;
}

#post blockquote p {
    @apply mt-0;
}

#post figure {
    @apply my-6;
}

#post figure img {
    @apply shadow-lg w-full;
}

#post figcaption {
    @apply text-base p-4;
}

.animate-left {
    position: relative;
    color: #fff;
    text-decoration: none;
}

.animate-left:hover {
    color: #fff;
}

.animate-left::before {
    content: "";
    position: absolute;
    display: block;
    width: 100%;
    height: 2px;
    bottom: -3px;
    left: 0;
    background-color: #fff;
    transform: scaleX(0);
    transform-origin: top left;
    transition: transform 0.3s ease;
    will-change: width;
}

.animate-left:hover::before {
    transform: scaleX(1);
}
